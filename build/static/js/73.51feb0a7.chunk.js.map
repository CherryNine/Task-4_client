{"version":3,"file":"static/js/73.51feb0a7.chunk.js","mappings":"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","sources":["app/auth/store/auth.selectors.ts","components/header.tsx","app/users/store/users.selectors.ts","app/users/users.page.tsx"],"sourcesContent":["import { RootState } from 'store';\n\nexport const isAuthorizedSelector = (state: RootState) => state.auth.isAuthorized;  \nexport const authSignInErrorSelector = (state: RootState) => state.auth.errors.signIn;\nexport const authSignUpErrorSelector = (state: RootState) => state.auth.errors.signUp;\nexport const authSignOutErrorSelector = (state: RootState) => state.auth.errors.signOut;\nexport const authPendingSelector = (state: RootState) => state.auth.pending;\nexport const userProfileSelector = (state: RootState) => state.auth.user; \nexport const authGetUserProfileErrorSelector = (state: RootState) => state.auth.errors.getUserProfile;\nexport const authGetUserProfilePendingSelector = (state: RootState) => state.auth.pending.getUserProfile;","import AirplanemodeActiveIcon from \"@mui/icons-material/AirplanemodeActive\";\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  IconButton,\n  Menu,\n  MenuItem,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport { getUserProfile, signOut } from \"app/auth/store/auth.actions\";\nimport { userProfileSelector } from \"app/auth/store/auth.selectors\";\nimport { resetUser } from \"app/auth/store/auth.slice\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(\n    null\n  );\n  const userInfo = useSelector(userProfileSelector);\n  const startLink =  \"/users\" \n\n\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleSignOut = () => {\n    dispatch<any>(signOut());\n    setAnchorElNav(null);\n    dispatch(resetUser());\n    navigate('/auth/sign-in');\n  };\n\n  useEffect(() => {\n    dispatch<any>(getUserProfile());\n  }, [dispatch]);\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href={startLink}\n            sx={{\n              mr: 2,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            Task-4\n          </Typography>\n\n          <Box\n            sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            {userInfo ? (\n              <>\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  sx={{\n                    fontFamily: \"monospace\",\n                    fontWeight: 700,\n                    letterSpacing: \".3rem\",\n                    color: \"inherit\",\n                    textDecoration: \"none\",\n                    marginLeft: \"auto\",\n                  }}\n                >\n                  Hi,{userInfo.first_name}\n                </Typography>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorElNav}\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  open={Boolean(anchorElNav)}\n                  onClose={handleCloseNavMenu}\n                >\n\n                  <MenuItem>\n                    <Button color=\"inherit\" onClick={handleSignOut}>\n                      Sign Out\n                    </Button>\n                  </MenuItem>\n                </Menu>\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleOpenNavMenu}\n                  color=\"inherit\"\n                  sx={{ marginLeft: \"auto\" }}\n                >\n                  <AirplanemodeActiveIcon />\n                </IconButton>\n              </>\n            ) : (\n              <>\n                <NavLink\n                  className=\"link\"\n                  to=\"/auth/sign-in\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    component=\"div\"\n                    color=\"white\"\n                    sx={{ marginLeft: \"5px\" }}\n                  >\n                    Login\n                  </Typography>\n                </NavLink>\n                <NavLink\n                    to=\"/auth/sign-up\"\n                    style={{ textDecoration: \"none\", marginLeft: \"5px\" }}\n                  >\n                    <Typography variant=\"h6\" component=\"div\" color=\"white\">\n                      Registration\n                    </Typography>\n                  </NavLink>\n              </>\n            )}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","import { RootState } from 'store';\nexport const usersSelector = (state: RootState) => state.users.users;\nexport const usersLoadingSelector = (state: RootState) => state.users.pending;\nexport const usersErrorSelector = (state: RootState) => state.users.errors;\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { Button, Toolbar, Typography } from '@mui/material';\r\nimport { Delete, Block, LockOpen } from '@mui/icons-material';\r\nimport Header from 'components/header';\r\nimport { getUsers, deleteUser, changeUserStatus } from './store/users.actions';\r\nimport { usersSelector, usersLoadingSelector, usersErrorSelector } from './store/users.selectors';\r\nimport { resetUser } from 'app/auth/store/auth.slice';\r\nimport { userProfileSelector } from 'app/auth/store/auth.selectors';\r\nimport { signOut } from 'app/auth/store/auth.actions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UsersPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(usersSelector);\r\n  const loading = useSelector(usersLoadingSelector);\r\n  const error = useSelector(usersErrorSelector);\r\n  const userInfo = useSelector(userProfileSelector);\r\n  const navigate = useNavigate();\r\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    dispatch<any>(getUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = () => {\r\n    const hasCurrentUser = userInfo && selectedIds.includes(userInfo.id);\r\n\r\n    dispatch<any>(deleteUser(selectedIds)).then(() => {\r\n      if (hasCurrentUser) {\r\n        dispatch<any>(signOut());\r\n        dispatch(resetUser());\r\n        navigate('/auth/sign-in');\r\n      }\r\n      dispatch<any>(getUsers());\r\n    });\r\n  };\r\n\r\n  const handleChangeStatus = (status: 'blocked' | 'unblocked') => {\r\n    const hasCurrentUser = userInfo && selectedIds.includes(userInfo.id);\r\n\r\n    dispatch<any>(changeUserStatus({ ids: selectedIds, status })).then(() => {\r\n      if (hasCurrentUser && status === 'blocked') {\r\n        dispatch<any>(signOut());\r\n        dispatch(resetUser());\r\n        navigate('/auth/sign-in');\r\n      }\r\n      dispatch<any>(getUsers());\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 300 },\r\n    { field: 'email', headerName: 'Email', width: 250 },\r\n    { field: 'first_name', headerName: 'First Name', width: 150 },\r\n    { field: 'last_name', headerName: 'Last Name', width: 150 },\r\n    { field: 'status', headerName: 'Status', width: 150 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div style={{ height: 'auto', width: '95%', padding: '20px' }}>\r\n        <h1>Users List</h1>\r\n        \r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Actions\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleChangeStatus('blocked')}\r\n            startIcon={<Block />}\r\n            sx={{ marginRight: '5px' }}\r\n          >\r\n            Block\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => handleChangeStatus('unblocked')}\r\n            startIcon={<LockOpen />}\r\n            sx={{ marginRight: '5px' }}\r\n          >\r\n            Unblock\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            onClick={handleDelete}\r\n            startIcon={<Delete />}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Toolbar>\r\n        \r\n        <DataGrid\r\n          rows={users}\r\n          columns={columns}\r\n          loading={loading.getUsers}\r\n          autoHeight\r\n          pageSize={users.length}\r\n          rowsPerPageOptions={[users.length]}\r\n          disableSelectionOnClick\r\n          checkboxSelection\r\n          onSelectionModelChange={(newSelection) => {\r\n            setSelectedIds(newSelection as string[]);\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n"],"names":["authSignInErrorSelector","state","auth","errors","signIn","authSignUpErrorSelector","signUp","userProfileSelector","user","Header","navigate","useNavigate","dispatch","useDispatch","anchorElNav","setAnchorElNav","React","userInfo","useSelector","useEffect","getUserProfile","_jsx","AppBar","position","children","Container","maxWidth","_jsxs","Toolbar","disableGutters","Typography","variant","noWrap","component","href","sx","mr","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","display","justifyContent","_Fragment","marginLeft","first_name","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","handleCloseNavMenu","MenuItem","Button","onClick","handleSignOut","signOut","resetUser","IconButton","size","event","currentTarget","AirplanemodeActiveIcon","NavLink","className","to","style","usersSelector","users","usersLoadingSelector","pending","usersErrorSelector","UsersPage","loading","selectedIds","setSelectedIds","useState","getUsers","handleChangeStatus","status","hasCurrentUser","includes","changeUserStatus","ids","then","height","width","padding","startIcon","Block","marginRight","LockOpen","handleDelete","deleteUser","Delete","DataGrid","rows","columns","field","headerName","autoHeight","pageSize","length","rowsPerPageOptions","disableSelectionOnClick","checkboxSelection","onSelectionModelChange","newSelection"],"sourceRoot":""}